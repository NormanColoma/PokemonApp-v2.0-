(function () {

    var AppComponent = {
        bindings: {
            name: '@',
        },
        controller: 'AppController',
        template: `
            <p>Lista de pokemons<\p>
            <pokemon-list></pokemon-list>
        `
    };

    angular
        .module('app')
        .component('appComponent', AppComponent);

})();
(function () {

    angular
        .module('app')
        .controller('AppController',  AppController);
    
    function AppController(){

        var vm = this;

        vm.$onInit = function() {
                this.name = 'Pokedex App';
        };
    }
    
})();
(function () {

    var PokemonList = {
        bindings: {
            pokemons: '<',
            selectedPokemon: '=?bind',
        },
        controller: 'PokemonListController',
        templateUrl: 'app/pokemon-list/pokemon-list.html'
    };

    angular
        .module('app')
        .component('pokemonList', PokemonList);
    
})();
(function () {


    angular
        .module('app')
        .controller('PokemonListController', PokemonListController);


    PokemonListController.$inject = ['pokemonListService'];

    function PokemonListController(pokemonListService){

        var vm = this;
        vm.extractId = extractId;
        vm.getPokemons = getPokemons;
        vm.selectPokemon = selectPokemon;

        vm.$onInit = function() {   
            getPokemons();
        };

        function extractId(pokemon){
            var id = pokemon._links.pokemon.href.split("https://pokemonrestapi.herokuapp.com/pokemons/");
            return id[1];
        }

        function getPokemons(){
            pokemonListService.getList().then(function(response){
                vm.pokemons = response;
            });
        }

        function selectPokemon(pokemon){
            vm.selectedPokemon = pokemon;
        }
    }
    
})();
(function() {
    'use strict';

    angular
        .module('app')
        .factory('pokemonListService', pokemonListService);


    pokemonListService.$inject = ['$http'];


    function pokemonListService($http){

        var url = 'https://pokemonrestapi.herokuapp.com/pokemons';

        var service = {
            addPokemon: addPokemon,
            getList: getList,
            getPokemon: getPokemon,
            getTypes: getTypes
        };

        return service;


        function addPokemon(pokemon) {

            return $http({
                method  : 'POST',
                url     : url,
                data    : pokemon

            })
                .then(addPokemonSuccess)
                .catch(addPokemonFailed);

            function addPokemonSuccess(data){
                return data.data;

            }

            function addPokemonFailed(data){
                return false;
            }
        }

        function getList(){
            return $http({
                method  : 'GET',
                url     : url,

            })
                .then(getListSuccess)
                .catch(getLisFailed);

            function getListSuccess(data){
                return data.data._embedded.pokemons;
            }

            function getLisFailed(){
                return false;
            }
        }

        function getPokemon(id){
            var uri = url+"/"+id;
            return $http({
                method  : 'GET',
                url     : uri,

            })
                .then(getPokemonSuccess)
                .catch(getPokemonFailed);

            function getPokemonSuccess(data){
                return data.data;
            }

            function getPokemonFailed(){
                return false;
            }
        }

        function getTypes(){
            return $http({
                method  : 'GET',
                url     : 'https://pokemonrestapi.herokuapp.com/types',

            })
                .then(getTypesSuccess)
                .catch(getTypesFailed);

            function getTypesSuccess(data){
                return data.data._embedded.types;
            }

            function getTypesFailed(){
                return false;
            }
        }


    }

})();
(function () {

    var PokemonAddForm = {
        bindings: {
            types: '<',
        },
        controller: 'PokemonAddFormController',
        templateUrl: 'app/pokemon-list/add-form/pokemon-add-form.html'
    };

    angular
        .module('app')
        .component('pokemonAddForm', PokemonAddForm);
    
})();
(function () {


    angular
        .module('app')
        .controller('PokemonAddFormController', PokemonAddFormController);


    PokemonAddFormController.$inject = ['pokemonListService', '$timeout'];

    function PokemonAddFormController(pokemonListService, $timeout){

        var vm = this;

         vm.$onInit = function() { 
            getTypes();
        };

        vm.added = false;
        vm.getTypes = getTypes;
        vm.hideMessage = hideMessage;
        vm.resetForm = resetForm;
        vm.savePokemon = savePokemon;

        function getTypes(){
            pokemonListService.getTypes().then(function(response){
                vm.types = response;
            });
        }
        
        function hideMessage(){
            vm.added = false;
        }

        function resetForm(form){
            if(form) {
                vm.pokemon = {};
                vm.type1 = "";
                vm.type2 = "";
                form.$setPristine();
                form.$setUntouched();
            }
        }

        function savePokemon(pokemon,form){
            pokemon.types = [];
            pokemon.types.push(vm.type1);
            pokemon.types.push(vm.type2);
            pokemonListService.addPokemon(pokemon).then(function(response){
                vm.added = true;
                vm.resetForm(form);
            });
        }
    }
    
})();
(function () {

    var PokemonDetail = {
        bindings: {
            pokemon: '=?bind',
            id: '<'
        },
        controller: 'PokemonDetailController',
        templateUrl: 'app/pokemon-list/detail/pokemon-detail.html'
    };

    angular
        .module('app')
        .component('pokemonDetail', PokemonDetail);
    
})();
(function () {


    angular
        .module('app')
        .controller('PokemonDetailController', PokemonDetailController);


    PokemonDetailController.$inject = ['pokemonListService','detailService'];

    function PokemonDetailController(pokemonListService,detailService){

        var vm = this;
        vm.getPokemon = getPokemon;
        vm.removed = false;
        vm.removePokemon = removePokemon;
        

        vm.$onInit = function() {   
            vm.getPokemon(vm.id);
        };

        function getPokemon(id){
            pokemonListService.getPokemon(id).then(function(response){
                vm.pokemon = response;
            });
        }

        function removePokemon(url){
            detailService.deletePokemon(url).then(function(response){
                vm.removed = true;
            });
        }
    }
    
})();
(function() {
    'use strict';

    angular
        .module('app')
        .factory('detailService', detailService);


    detailService.$inject = ['$http'];


    function detailService($http){

        var service = {
            getTypes: getTypes,
            deletePokemon: deletePokemon,
            updatePokemon: updatePokemon
        };

        return service;

        function deletePokemon(url){
            return $http({
                method  : 'DELETE',
                url     : url,

            })
                .then(deletePokemonSuccess)
                .catch(deletePokemonFailed);

            function deletePokemonSuccess(){
                return true;
            }

            function deletePokemonFailed(){
                return false;
            }
        }

        function getTypes(url){
            return $http({
                method  : 'GET',
                url     : url+"/types",

            })
                .then(getTypesSuccess)
                .catch(getTypesFailed);

            function getTypesSuccess(data){
                return data.data._embedded.types;
            }

            function getTypesFailed(data){
                return false;
            }
        }

        function updatePokemon(pokemon,url) {
            return $http({
                method  : 'PUT',
                url     : url,
                data    : pokemon

            })
                .then(updatePokemonSuccess)
                .catch(updatePokemonFailed);

            function updatePokemonSuccess(data){
                return data.data;

            }

            function updatePokemonFailed(data){
                return false;
            }
        }
    }

})();
(function () {

    var PokemonEditForm = {
        bindings: {
            pokemon: '=',
            types: '<'
        },
        controller: 'PokemonEditFormController',
        templateUrl: 'app/pokemon-list/edit-form/pokemon-edit-form.html'
    };

    angular
        .module('app')
        .component('pokemonEditForm', PokemonEditForm);
    
})();
(function () {


    angular
        .module('app')
        .controller('PokemonEditFormController', PokemonEditFormController);


    PokemonEditFormController.$inject = ['pokemonListService','detailService'];

    function PokemonEditFormController(pokemonListService,detailService){

        var vm = this;

        vm.$onInit = function() { 
            getTypes();
            getPokemonTypes(vm.pokemon._links.pokemon.href);
        };
        
        vm.getTypes = getTypes;
        vm.getPokemonTypes = vm.getPokemonTypes;
        vm.hideMessage = hideMessage;
        vm.modified = false;
        vm.updatePokemon = updatePokemon;

        function getTypes(){
            pokemonListService.getTypes().then(function(response){
                vm.types = response;
            });
        }

        function getPokemonTypes(url){
            detailService.getTypes(url).then(function(response){
                vm.pokemon.types = response;
            });
        }

        function hideMessage(){
            vm.modified = false;
        }

        function updatePokemon(pokemon){
            var pokemon_edited = angular.copy(pokemon);
            pokemon_edited.types[0] = pokemon.types[0]._links.type.href;
            pokemon_edited.types[1] = pokemon.types[1]._links.type.href;
            detailService.updatePokemon(pokemon_edited,pokemon._links.pokemon.href).then(function(response){
                vm.modified = true;
            });
        }
        
    }
    
})();